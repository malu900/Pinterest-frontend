[{"/home/maluvdberg/fhict/repo/sem3/FUN3/Pinterest-client/frontend/src/components/ShowCollection.js":"1","/home/maluvdberg/fhict/repo/sem3/FUN3/Pinterest-client/frontend/src/components/Collection.js":"2","/home/maluvdberg/fhict/repo/sem3/FUN3/Pinterest-client/frontend/src/components/AllCollections.js":"3","/home/maluvdberg/fhict/repo/sem3/FUN3/Pinterest-client/frontend/src/App.js":"4","/home/maluvdberg/fhict/repo/sem3/FUN3/Pinterest-client/frontend/src/reportWebVitals.js":"5","/home/maluvdberg/fhict/repo/sem3/FUN3/Pinterest-client/frontend/src/common/AppHeader.js":"6","/home/maluvdberg/fhict/repo/sem3/FUN3/Pinterest-client/frontend/src/components/NotFound.js":"7","/home/maluvdberg/fhict/repo/sem3/FUN3/Pinterest-client/frontend/src/components/Collections.js":"8"},{"size":1259,"mtime":1610810753284,"results":"9","hashOfConfig":"10"},{"size":7192,"mtime":1610815755502,"results":"11","hashOfConfig":"10"},{"size":1885,"mtime":1610819163565,"results":"12","hashOfConfig":"10"},{"size":4438,"mtime":1610818464116,"results":"13","hashOfConfig":"10"},{"size":362,"mtime":1609746779381,"results":"14","hashOfConfig":"10"},{"size":2128,"mtime":1610814928834,"results":"15","hashOfConfig":"10"},{"size":545,"mtime":1610281754774,"results":"16","hashOfConfig":"10"},{"size":1112,"mtime":1610814867642,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"k0xt8h",{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/maluvdberg/fhict/repo/sem3/FUN3/Pinterest-client/frontend/src/components/ShowCollection.js",["37","38"],"import React, { Component } from \"react\";\nimport { getUserCollectionByCollectionId, getImage } from \"../common/APIUtils\";\n\nexport class ShowCollection extends Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props);\n    this.props = props;\n    this.state = {\n      collection: [],\n      collectionName: \"\",\n      file: {},\n      fileid: \"\",\n      success: \"\",\n      isauthenticated: this.props.isauthenticated,\n      currentuser: this.props.currentuser,\n      photo: \"\",\n    };\n  }\n  componentDidMount() {\n    console.log(this.props.collectionname);\n    const {\n      match: { params },\n    } = this.props;\n    console.log(params.id);\n    getUserCollectionByCollectionId(params.id).then((response) => {\n      let collection = response;\n      console.log(response);\n      this.setState({\n        collection: collection,\n        fileid: collection.collectionImage.id,\n        file: collection.collectionImage,\n      });\n    });\n  }\n  componentDidUpdate() {}\n  render() {\n    let collection = this.state.collection;\n    let file = this.state.file;\n    return (\n      <div>\n        <p style={{ margin: \"0\" }}>{collection.collectionname}</p>\n        <img src={file.photoBase64} />\n      </div>\n    );\n  }\n}\n\nexport default ShowCollection;\n",["39","40"],"/home/maluvdberg/fhict/repo/sem3/FUN3/Pinterest-client/frontend/src/components/Collection.js",["41","42","43"],"import React, { Component } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { toast } from \"react-toastify\";\nimport { createCollection } from \"../common/APIUtils\";\nimport { API_BASE_URL, ACCESS_TOKEN } from \"../common/constants\";\nimport axios from \"axios\";\n\nexport class Collection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collectionName: \"\",\n      file: null,\n      success: \"\",\n      isauthenticated: this.props.isauthenticated,\n      currentuser: this.props.currentuser,\n    };\n  }\n  componentDidMount() {\n    // if (this.state.isauthenticated) {\n    //   console.log(\"authed\");\n    // } else {\n    //   // this.props.history.push(\"/\");\n    // }\n  }\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      Accept: \"application/json\",\n    });\n    if (sessionStorage.getItem(ACCESS_TOKEN)) {\n      headers.append(\n        \"Authorization\",\n        \"Bearer \" + sessionStorage.getItem(ACCESS_TOKEN)\n      );\n    }\n    console.log(headers.values);\n\n    event.preventDefault();\n\n    const formData = new FormData();\n    formData.append(\"file\", this.state.file);\n    formData.append(\"collectionName\", this.state.collectionName);\n\n    axios({\n      method: \"post\",\n      headers: {\n        Authorization: \"Bearer \" + sessionStorage.getItem(ACCESS_TOKEN),\n      },\n      url: \"http://localhost:8080/api/collections\",\n      data: formData,\n    })\n      .then(() => {\n        this.props.history.push(\"/collections/all\");\n      })\n      .catch(function (response) {\n        console.log(response);\n      });\n    console.log(formData);\n  };\n\n  uploadFile = (event) => {\n    event.preventDefault();\n\n    const formData = new FormData();\n    formData.append(\"file\", this.state.file);\n    formData.append(\"collectionName\", this.state.collectionName);\n    for (var pair of formData.entries()) {\n      console.log(pair[0] + \", \" + pair[1]);\n    }\n  };\n  fileSelectedHandler = (event) => {\n    console.log(event.target.files[0]);\n    this.setState({\n      file: event.target.files[0],\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group>\n            <Form.Label>Collection name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"collectionName\"\n              placeholder=\"collection name\"\n              value={this.state.collectionName}\n              onChange={this.onChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Collection Image</Form.Label>\n            <Form.Control\n              type=\"file\"\n              name=\"collectionImage\"\n              placeholder=\"collection image\"\n              value={this.state.collectionImage}\n              onChange={this.fileSelectedHandler}\n              accept=\"image/png, image/jpeg\"\n            />\n          </Form.Group>\n          <Button disabled={!this.state.file} onClick={this.uploadFile}>\n            Upload\n          </Button>\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default Collection;\n\n// import React, { Component } from \"react\";\n// import { Form, Button } from \"react-bootstrap\";\n// import { toast } from \"react-toastify\";\n// import { createCollection } from \"../common/APIUtils\";\n\n// export class Collection extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       collectionName: \"\",\n//       file: null,\n//       success: \"\",\n//       isauthenticated: this.props.isauthenticated,\n//       currentuser: this.props.currentuser,\n//     };\n//   }\n//   componentDidMount() {\n//     console.log(this.props.currentuser, this.props.isauthenticated);\n//     if (this.state.isauthenticated) {\n//       console.log(\"authed\");\n//     } else {\n//       this.props.history.push(\"/\");\n//     }\n//   }\n//   onChange = (e) => {\n//     this.setState({\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n\n//   handleSubmit = (event) => {\n//     event.preventDefault();\n//     // this.setState({\n//     //   file: event.target.files[0],\n//     // });\n//     const collectionRequest = {\n//       collectionName: this.state.collectionName,\n//     };\n//     createCollection(collectionRequest)\n//       .then((response) => {\n//         this.setState({\n//           success: response.success,\n//         });\n//         console.log(this.state.success);\n//         if (this.state.success) {\n//           console.log(response.message);\n//           toast.success(response.message);\n//         }\n//       })\n//       .catch((error) => {\n//         if (error.status === 401) {\n//           this.props.handleLogout(\n//             \"/login\",\n//             \"error\",\n//             \"You have been logged out. please login to create a collection\"\n//           );\n//         } else {\n//           toast.error(\"Something went wrong! :(\");\n//         }\n//       });\n//     console.log(collectionRequest);\n//   };\n\n//   uploadFile = (event) => {\n//     event.preventDefault();\n//     // this.setState({ msg: \"\" });\n\n//       const formData = new FormData();\n//   formData.append(\n//     \"file\",\n//     this.state.selectedFile,\n//     \"collectionName\",\n//     this.state.collectionName\n//   );\n//     console.log(data);\n//     // fetch(\"http://localhost:8080/upload\", {\n//     //   method: \"POST\",\n//     //   body: data,\n//     // })\n//     //   .then((response) => {\n//     //     this.setState({ msg: \"File successfully uploaded\" });\n//     //   })\n//     //   .catch((err) => {\n//     //     this.setState({ error: err });\n//     //   });\n//   };\n//   fileSelectedHandler = (event) => {\n//     console.log(event.target.files[0]);\n//     this.setState({\n//       file: event.target.files[0],\n//     });\n//   };\n\n//   render() {\n//     return (\n//       <div>\n//         <Form onSubmit={this.handleSubmit}>\n//           <Form.Group>\n//             <Form.Label>Collection name</Form.Label>\n//             <Form.Control\n//               type=\"text\"\n//               name=\"collectionName\"\n//               placeholder=\"collection name\"\n//               value={this.state.collectionName}\n//               onChange={this.onChange}\n//             />\n//           </Form.Group>\n//           <Form.Group controlId=\"formBasicEmail\">\n//             <Form.Label>Collection Image</Form.Label>\n//             <Form.Control\n//               type=\"file\"\n//               name=\"collectionImage\"\n//               placeholder=\"collection image\"\n//               value={this.state.collectionImage}\n//               onChange={this.fileSelectedHandler}\n//               accept=\"image/png, image/jpeg\"\n//             />\n//           </Form.Group>\n//           <Button disabled={!this.state.file} onClick={this.uploadFile}>\n//             Upload\n//           </Button>\n//           <Button variant=\"primary\" type=\"submit\">\n//             Submit\n//           </Button>\n//         </Form>\n//       </div>\n//     );\n//   }\n// }\n\n// export default Collection;\n","/home/maluvdberg/fhict/repo/sem3/FUN3/Pinterest-client/frontend/src/components/AllCollections.js",["44","45","46"],"/home/maluvdberg/fhict/repo/sem3/FUN3/Pinterest-client/frontend/src/App.js",["47"],"/home/maluvdberg/fhict/repo/sem3/FUN3/Pinterest-client/frontend/src/reportWebVitals.js",[],"/home/maluvdberg/fhict/repo/sem3/FUN3/Pinterest-client/frontend/src/common/AppHeader.js",["48","49","50"],"/home/maluvdberg/fhict/repo/sem3/FUN3/Pinterest-client/frontend/src/components/NotFound.js",[],"/home/maluvdberg/fhict/repo/sem3/FUN3/Pinterest-client/frontend/src/components/Collections.js",["51","52"],{"ruleId":"53","severity":1,"message":"54","line":2,"column":43,"nodeType":"55","messageId":"56","endLine":2,"endColumn":51},{"ruleId":"57","severity":1,"message":"58","line":43,"column":9,"nodeType":"59","endLine":43,"endColumn":39},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"53","severity":1,"message":"64","line":3,"column":10,"nodeType":"55","messageId":"56","endLine":3,"endColumn":15},{"ruleId":"53","severity":1,"message":"65","line":4,"column":10,"nodeType":"55","messageId":"56","endLine":4,"endColumn":26},{"ruleId":"53","severity":1,"message":"66","line":5,"column":10,"nodeType":"55","messageId":"56","endLine":5,"endColumn":22},{"ruleId":"53","severity":1,"message":"67","line":2,"column":10,"nodeType":"55","messageId":"56","endLine":2,"endColumn":41},{"ruleId":"53","severity":1,"message":"68","line":5,"column":8,"nodeType":"55","messageId":"56","endLine":5,"endColumn":20},{"ruleId":"57","severity":1,"message":"58","line":57,"column":15,"nodeType":"59","endLine":57,"endColumn":61},{"ruleId":"53","severity":1,"message":"69","line":8,"column":10,"nodeType":"55","messageId":"56","endLine":8,"endColumn":19},{"ruleId":"53","severity":1,"message":"70","line":1,"column":10,"nodeType":"55","messageId":"56","endLine":1,"endColumn":22},{"ruleId":"53","severity":1,"message":"71","line":2,"column":47,"nodeType":"55","messageId":"56","endLine":2,"endColumn":54},{"ruleId":"72","severity":1,"message":"73","line":8,"column":3,"nodeType":"74","messageId":"75","endLine":10,"endColumn":4},{"ruleId":"53","severity":1,"message":"76","line":4,"column":8,"nodeType":"55","messageId":"56","endLine":4,"endColumn":22},{"ruleId":"53","severity":1,"message":"77","line":5,"column":10,"nodeType":"55","messageId":"56","endLine":5,"endColumn":14},"no-unused-vars","'getImage' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["78"],"no-negated-in-lhs",["79"],"'toast' is defined but never used.","'createCollection' is defined but never used.","'API_BASE_URL' is defined but never used.","'getUserCollectionByCollectionId' is defined but never used.","'SockJsClient' is defined but never used.","'Container' is defined but never used.","'ACCESS_TOKEN' is defined but never used.","'NavItem' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'ShowCollection' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]